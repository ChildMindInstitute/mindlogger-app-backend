# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2
jobs:
  build:
    branches:
      only:
        - mongo
        - girder-dev
        - circleci
    docker:
      # specify the version you desire here
      # use `-browsers` prefix for selenium tests, e.g. `3.6.1-browsers`
      - image: circleci/python:3.6.5
      - image: girder/girder
      - image: circleci/mongo:4.0.0
      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "mindlogger_backend_dev/requirements.txt" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r mindlogger_backend_dev/requirements.txt
            pip install pytest pytest-cov pytest-pythonpath pytest-remotedata pytest-openfiles pytest-doctestplus pytest-arraydiff celery
            PYTHONPATH=.

      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "mindlogger_backend_dev/requirements.txt" }}

      - run:
          name: Set Up Girder
          command: |
          environment:
            GIRDER_USER: severus.snape
            GIRDER_PASSWORD: OA\rL(D>NVDM#

      # run tests!
      # this example uses Django's built-in test-runner
      # other common Python testing frameworks include pytest and nose
      # https://pytest.org
      # https://nose.readthedocs.io
      - run:
          name: run tests
          command: |
            . venv/bin/activate
            pytest --doctest-modules --cov-report html:coverage --cov . --cov-config .circleci/.coveragerc

      - store_artifacts:
          path: coverage
          destination: coverage
